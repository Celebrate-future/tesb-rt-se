<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:d="http://docbook.org/ns/docbook">
  <title>Enabling Rent a Car demo to use Service Activity Monitoring</title>

  <section>
    <title>Purpose of Service Locator</title>

    <para>The Service Activity Monitoring (SAM) allows to log / monitor service calls done with the Apache CXF Framework. Typical use cases are usage statistics and fault monitoring. The solution consists of two parts: Agent (sam-agent) and Monitoring Server (sam-server). The Agent creates events out of the requests and replies on service consumer and provider side. The events are first collected locally and then sent to the monitoring server periodically to not disturb the normal message flow. The Monitoring Server receives events from the Agent,  optinally filters/handlers events and stores them into a Database. The Agent is packaged as a jar that needs to be on the classpath of the service consumer and provider. The Monitoring Server is deployed as a WAR in a servlet container and needs access to a database. </para>

    <para>For example: One service call can generate four events. Consumer is sending a request (REQ_OUT), service receives request (REQ_IN), service sends response (RESP_OUT) and consumer receives response (RESP_IN). In this service call all events belong together. For further event processing all of these events will get the same "flow id". </para>
  </section>

  <section>
    <title>Installation prerequisites</title>

    <itemizedlist>
      <listitem>
        <para> To enable the Rent-a-Car example initially install and run the
        Monitoring server. For more information please read Service
        Activity Monitoring Manual. </para>
      </listitem>

      <listitem>
        <para> You need the agent component and common component of the Service Activity Monitoring 
        (sam-agent-4.0.jar and sam-common-4.0.jar) to enable your CFX service or consumer to use the
        Service Activity Monitoring. You need to add <code>sam-agent-4.0.jar</code> and <code>sam-common-4.0.jar</code> into
        your classpath or war file. Also add it to the OSGi conatiner. </para>
      </listitem>

      <listitem>
        <para> For enabling Service Activity Monitoring in your maven build </para>
        <para> 1. Put sam-agent-4.0.jar and sam-common-4.0.jar into local maven repo. For it run the maven command  
		<programlisting>
mvn install:install-file -Dfile=&lt;Talend ESB Runtime&gt;\add-ons\SAM\sam-agent-4.0.jar -DgroupId=org.talend.esb
-DartifactId=sam-agent -Dversion=4.0 -Dpackaging=jar

mvn install:install-file -Dfile=&lt;Talend ESB Runtime&gt;\add-ons\SAM\sam-common-4.0.jar -DgroupId=org.talend.esb
-DartifactId=sam-common -Dversion=4.0 -Dpackaging=jar
		</programlisting>
        </para>         
        <para> 2. Add the following dependency to your pom.xml file: </para>
      <programlisting>
&lt;dependency&gt;
     &lt;groupId&gt;org.talend.esb&lt;/groupId&gt;
     &lt;artifactId&gt;sam-agent&lt;/artifactId&gt;
     &lt;version&gt;4.0&lt;/version&gt;
&lt;/dependency&gt;
&lt;dependency&gt;
     &lt;groupId&gt;org.talend.esb&lt;/groupId&gt;
     &lt;artifactId&gt;sam-common&lt;/artifactId&gt;
     &lt;version&gt;4.0&lt;/version&gt;
&lt;/dependency&gt;
	  </programlisting>

        <para> Add these dependencies to projects using the Service Activity Monitoring. In
        our case these are the projects CRMService and ReservationService.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>How to enable Rent a Car demo</title>

    <para>
      <emphasis role="strong">1. Add the Service Activity Monitoring feature to the Spring
      configuratons represented by the beans.xml files.</emphasis>
    </para>

    <para> The Service Activity Monitoring feature should be added to each endpoint and
    client in the example configuration. </para>

    <para> 1.1 Add the Service Activity Monitoring feature to the endpoint bean in the
    <code>beans.xml</code> exactly the same way as a standard CXF feature.
    </para>

    <para> Apply these changes to the following files: <simplelist columns="1"
        type="vert">
        <member>../examples/reservationservice/service/src/main/resources/META-INF/spring/beans.xml</member>

        <member>../examples/crmservice/service/src/main/resources/META-INF/spring/beans.xml</member>
      </simplelist> </para>

    <para> For example: 
        <programlisting>
&lt;import resource="classpath:/agent-context.xml" /&gt;
...		
&lt;jaxws:endpoint id="..."
    ...
    &lt;jaxws:features&gt;
      &lt;ref bean="eventFeature"/&gt;
    &lt;/jaxws:features&gt;
&lt;/jaxws:endpoint&gt;
        </programlisting> 
    </para>

    <para>
For more information please read the Service Activity Monitoring User Guide. </para>

    <para> 1.2 Add the Service Activity Monitoring feature to the client bean in the
    <code>beans.xml</code> file exactly the same way as a standard CXF
    feature. </para>

    <para>
            <programlisting>
&lt;import resource="classpath:/agent-context.xml" /&gt;
...		
&lt;jaxws:endpoint id="..."
    ...
    &lt;jaxws:features&gt;
      &lt;ref bean="eventFeature"/&gt;
    &lt;/jaxws:features&gt;
&lt;/jaxws:endpoint&gt;
            </programlisting>
    </para>

    <para> Apply these changes to the following files: </para>

    <para>
      <simplelist columns="1" type="vert">
        <member>../examples/reservationservice/client/src/main/resources/META-INF/spring/beans.xml</member>

        <member>../examples/crmservice/client/src/main/resources/META-INF/spring/beans.xml</member>
      </simplelist>
    </para>

    <para>
      <emphasis role="strong">2. Deploy the SAM agent in the TSF
      container</emphasis>
    </para>

    <para> Copy the sam-agent-4.0.jar and sam-common-4.0.jar into deploy
    directory of Talend Service Factory OSGi container </para>

    <para> Type in console command "list". You will see zookeeper and locator
    client bundles in the lists of installed bundles:               
<programlisting>
[ 114] [Installed  ] [            ] [       ] [   60] Service Activity Monitoring :: Common (4.0.0)
[ 115] [Installed  ] [            ] [       ] [   60] Service Activity Monitoring :: Agent (4.0.0)
</programlisting>
    </para>

    <para> <emphasis role="strong">3. Create and deploy OSGi
    bundles</emphasis> as described earlier in this guide. </para>
  </section>

  <section>
    <title>What you will see after enabling the Service Activity Monitoring
    feature:</title>

    <para>
When you are running Rent a Car demo, the Events which come from Endpoint and client have been stored into Database successfully, you can query them from DB. For example:
	</para>

	<mediaobject>
	  <imageobject>
		 <imagedata fileref="images/db.jpg" format="jpg"/>
	  </imageobject>
	</mediaobject>  	
	
    <para> In our example, enabling the Service Activity Monitoring does not affect the
    behavior of Rent a Car demo. Locator allows clients to monitor events come from services and clients. </para>
  </section>
</chapter>
