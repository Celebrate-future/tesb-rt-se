<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:d="http://docbook.org/ns/docbook">
  <title>Enabling the Service Locator for the Rent a Car demo</title>

  <section id="install">
    <title>Purpose of Service Locator</title>

    <para> The Service Locator is a service that provides service consumers
    with a mechanism to discover service endpoints at run time, thus isolating
    consumers from knowledge of the endpointâ€™s physical location. Additionally, it
    allows service providers to automatically register and unregister their
    service endpoints. Thus the providers actively advertise the availability
    of their service endpoints to consumers. </para>

    <para> The Service Locator consists of two parts: The Service Locator
    Server hosting an endpoint repository and the CXF feature used to enable
    usage of the locator for CXF service consumers and providers. Like any
    standard CXF feature, it needs to be configured separately for the service
    and consumer. A provider-side Locator Feature
    extension registers and deregisters service endpoints in the endpoint
    repository when the provider becomes available or unavailable. A
    consumer-side Locator Feature extension transparently retrieves service
    endpoint addresses from the endpoint repository when a service call to a
    provider is to be made. </para>
  </section>

  <section id="starting_xxe">
    <title>Installation prerequisites</title>

    <itemizedlist>
      <listitem>
        <para> To enable the Rent-a-Car example initially install and run the
        Service Locator server. To start the Service Locator you need a
		configuration file. Here is a sample, create it in <emphasis role="strong">conf/zoo.cfg</emphasis>:</para>

      <example xml:id="ex.slstaloneconf">
        <title>Service Locator standalone configuration</title>

        <programlisting>
tickTime=2000 
dataDir=/var/locator 
clientPort=2181
		</programlisting>
      </example>
	  
	  <para>Now that you created the configuration file, you can start Service
      Locator server, bin directory contain scripts that allow easy access
      (classpath in particular) to the Service Locator server and command line
      client. For more information please read <emphasis role="strong">Service
      Locator Installation Manual</emphasis>.</para>

        <para>Since creating a distributed, fault-tolerant endpoint repository
        is a non-trivial task, the Service Locator Server implementation is based
        on proven open source technology - Apache ZooKeeper. This is a highly
        reliable and available service that provides coordination between
        distributed processes. To learn more about Apache ZooKeeper, visit
        <ulink url="http://zookeeper.apache.org">http://zookeeper.apache.org</ulink>.
        </para>
      </listitem>

      <!-- listitem>
        <para> You'll need the client component of the Service Locator
        (locator-4.0.jar) to enable your CXF service or consumer to use the
        Service Locator. This can be done by adding <code>locator-4.0.jar</code> to
        your classpath or war file. Also add it to the OSGi container. </para>
      </listitem-->

      <!--listitem>
        <para>To enable the Service Locator for the Rent-a-Car example:</para>
        <procedure>
          <step>
            <para>Put locator-4.0.jar into your local maven repository. For it run the maven command</para>
            <userinput>mvn install:install-file -Dfile=&lt;Talend ESB Runtime&gt;\add-ons\Locator\locator-4.0.jar -DgroupId=org.talend.esb -DartifactId=locator -Dversion=4.0 -Dpackaging=jar</userinput>
          </step>
          <step>
            <para>Put zookeeper-3.3.3.jar into your local maven repository. For it run the maven command</para>
            <userinput>mvn install:install-file -Dfile=&lt;Talend ESB Runtime&gt;\zookeeper\zookeeper-3.3.3.jar -DgroupId=org.apache.zookeeper -DartifactId=zookeeper -Dversion=3.3.3 -Dpackaging=jar</userinput>
          </step>
        </procedure>
      </listitem-->
    </itemizedlist>
  </section>

  <section>
    <title>Enabling the Service Locator</title>

        <procedure>
          <step>
      <para>From the base directory of the ESB sample, the maven
      <code>talend-esb-&lt;version&gt;/examples/tesb/pom.xml</code> file can be used to build
      the demo.</para>

      <para>Using Apache Maven with either UNIX or Windows: <userinput>mvn clean install -Plocator</userinput></para>

      <para>Running this command will build the demo and create OSGi bundles
      to be deployed to an OSGi container.</para>
          </step>
    <!-- para>
      <emphasis role="strong">1. Add the Service Locator feature to the Spring
      configurations represented by the beans.xml files.</emphasis>
    </para>

    <para> The Service Locator feature should be added to each endpoint and
    client in the example configuration. </para>

    <para> 1.1 Add the Service Locator feature to the endpoint bean in the
    <code>beans.xml</code> exactly the same way as a standard CXF feature.
    </para>

    <para> Apply these changes to the following files: <simplelist columns="1"
        type="vert">
        <member>../examples/reservationservice/service/src/main/resources/META-INF/spring/beans.xml</member>

        <member>../examples/crmservice/service/src/main/resources/META-INF/spring/beans.xml</member>
      </simplelist> </para>

    <para> For example: 
        <programlisting>
&lt;jaxws:endpoint id="..."
    ...
    &lt;jaxws:features&gt;
        &lt;bean class="org.talend.esb.locator.LocatorFeature"&gt;
            &lt;property name="locatorEndpoints" 
                         value="locator_host1:2181,locator_host2:2181,locator_host2:2182"/&gt;
        &lt;/bean&gt;
    &lt;/jaxws:features&gt;
&lt;/jaxws:endpoint&gt;
        </programlisting> 
    </para>

    <para> Property <code>locatorEndpoints</code> specifies hosts and ports,
    on which the Zookeeper listens for client connections. For more
    information please read the Service Locator Configuration Manual. </para>

    <para> 1.2 Add the Service Locator feature to the client bean in the
    <code>beans.xml</code> file exactly the same way as a standard CXF
    feature. </para>

    <para> Also use the <code>locator</code> transport in the client address
    as shown in the example below: </para>

    <para>
            <programlisting>
&lt;jaxws:client id="..."
    ...
    address="locator://some_useful_information"&gt;
    &lt;jaxws:features&gt;
        &lt;bean class="org.talend.esb.locator.LocatorFeature"&gt;
            &lt;property name="locatorEndpoints" 
                         value="locator_host1:2181,locator_host2:2181,locator_host2:2182"/&gt;
        &lt;/bean&gt;
    &lt;/jaxws:features&gt;
&lt;/jaxws:client&gt;
            </programlisting>
    </para>

    <para> Apply these changes to the following files: </para>

    <para>
      <simplelist columns="1" type="vert">
        <member>../examples/reservationservice/client/src/main/resources/META-INF/spring/beans.xml</member>

        <member>../examples/crmservice/client/src/main/resources/META-INF/spring/beans.xml</member>
      </simplelist>
    </para>

    <para>
      <emphasis role="strong">2. Deploy the Service Locator client in the TSF
      container</emphasis>
    </para>

    <para> Copy the locator JAR file and the zookeeper JAR file into deploy
    directory of Talend Service Factory OSGi container. You can find locator JAR file in 
	<emphasis role="strong">${Talend ESB Installation}/add-ons/Locator/</emphasis>.
	Zookeeper JAR file is in <emphasis role="strong">${Talend ESB Installation}/zookeeper/</emphasis>.</para>

    <para> Type in console command "list". You will see zookeeper and locator
    client bundles in the lists of installed bundles:               
<programlisting>
[  36] [Active     ] [            ] [       ] [   60] ZooKeeper Bundle (3.3.2)
[  31] [Active     ] [            ] [       ] [   60] Service Locator Client for CXF (4.0.0)
</programlisting>
    </para-->

          <step>
    <para> <link linkend="rac.deploy">Create and deploy OSGi bundles</link> as described earlier in this guide.</para>
          </step>
        </procedure>
  </section>

  <section>
    <title>What you will see after enabling the Service Locator
    feature:</title>

    <para> We can see additional INFO logs during deploy demo services and
    clients into OSGi container. </para>

    <para> We have following logs from Zookeeper about initiating and
    established client connections. </para>

<programlisting>
18:41:37,843 | INFO  | ExtenderThread-8 | ZooKeeper | 
org.apache.zookeeper.ZooKeeper    373 | 36 - org.apache.hadoop.zookeeper - 3.3.2 | 
Initiating client connection, connectString=locator_host1:2181 sessionTimeout=5000 
watcher=org.talend.esb.locator.ServiceLocator$WatcherImpl@1e26d9b
 
18:41:37,843 | INFO  | d-8-SendThread() | ClientCnxn  | 
org.zookeeper.ClientCnxn$SendThread 1041 | 36 - org.apache.hadoop.zookeeper - 3.3.2 |
Opening socket connection to server locator_host1/192.168.150.201:2181
 
18:41:37,843 | INFO  | d(sop-td57:2181) | ClientCnxn  | 
org.zookeeper.ClientCnxn$SendThread  949 | 36 -  org.apache.hadoop.zookeeper - 3.3.2 | 
Socket connection established to locator_host1/192.168.150.201:2181, initiating session
 
18:41:37,844 | INFO  | d(sop-td57:2181) | ClientCnxn  | 
org.zookeeper.ClientCnxn$SendThread  738 | 36 -  org.apache.hadoop.zookeeper - 3.3.2 | 
Session establishment complete on server locator_host1/192.168.150.201:2181, 
sessionid = 0x32e71447e6b004c, negotiated timeout = 4000
 </programlisting>

    <para> Also, we can judge how well the feature is working by watching the Locator logs in
    the console window. </para>

<programlisting>
18:41:38,765 | INFO  | ExtenderThread-8 | ServiceLocator | 
talend.esb.locator.ServiceLocator  177 |  - -  | Register endpoint 
http://localhost:8888/soap/CRMServiceProvider/ for service 
 {http://services.talend.org/CRMService}CRMServiceProvider.
 
18:44:07,250 | INFO  | xtenderThread-12 | ServiceLocator | 
talend.esb.locator.ServiceLocator  177 |  - -  | Register endpoint 
http://localhost:8888/soap/ReservationServiceProvider/ for service 
 {http://services.talend.org/ReservationService}ReservationServiceProvider.
</programlisting>           

    <para> In our example, enabling the Service Locator does not affect the
    behavior of Rent a Car demo, because the benefits of Service Locator occur
    when you have multiple providers for the service. In this case we can use such
    useful features as automatic endpoint deregistration and failover. The Locator
    will allow clients to failover from the initial target endpoint to another
    compatible endpoint for the target service. </para>
  </section>
</chapter>
